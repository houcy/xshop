import os, struct
from subprocess import *

PI = lambda x: struct.pack('I', x)
boundary = "="*10 + "BinCFI TEST RESULT" + "="* 10

def compile():
    builddeps = ['vim', 'gcc-multilib', 'python-pip', 'python-dev', \
                    'libswitch-perl', 'gdb']

    for dep in builddeps:
        os.system('apt-get -y install %s' % dep)

    os.system('/bin/bash ./install.sh')
def run():
    #compile()

    bin_start = 0x08048300
    bin_end = 0x8049000
    target_binary = '/home/cfi/cfi_no_svn/python_rw/target_elf/vuln/vuln_final'
    
    print boundary

    for addr in xrange(bin_start, bin_end):
        try:
                payload = "A"*268 + PI(addr)
                p = Popen([target_binary, payload], stderr=PIPE)
                stderr = p.stderr
                #print stderr.read()
                if (stderr.read() == ''):
                        os.system("objdump -D /home/vuln|grep %x -n1" % addr)
                else:
                        pass
                        #print "InVulnerable : %08X" % addr
        except TypeError:
                pass
    
    print boundary

if __name__ == '__main__':
    run()
