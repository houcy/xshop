#!/usr/bin/python2.7

from subprocess import call
from xshop import new
from xshop import config
from xshop import test
from xshop import pull
from xshop import colors as clr
import sys
import os

if sys.argv[1] =='new':
    if len(sys.argv)<4 or len(sys.argv)>4:
        print "new [library] [project_name]"
    else:
        library = sys.argv[2]
        project = sys.argv[3]
        print "Building project "+project+" for library "+library+"."
        new.new_test_project(library, project)

if sys.argv[1] =='export':
	# Run test to output
	print clr.BOLD + "Running Default Test: " + clr.ENDC,
	if call(['xshop','test']):
		print clr.FAIL+"FAILED"+clr.ENDC
		raise Exception()

	
	# Copy Project

	# Remove Src, Pkg, .DSStore

	# Run tar

elif sys.argv[1] =='test':
        variables = config.variables()
        T = test.Trial(variables)
	T.run()
	f = open('output.log','w')
	f.write(str(T.results()))
	f.close()		

elif sys.argv[1]=='attach':
        if len(sys.argv) < 3:
            print "xshop attach [variable=value]+ [container]"
        else:
            container = sys.argv[-1]
            var = sys.argv[2:-1]
            
            variables = {}
            for v in var:
                    v = v.split('=')
                    variables[v[0]]=v[1]
            print variables
            T = test.TestCase(variables)
            T.attach(container)

elif sys.argv[1]=='build_image':
	image = sys.argv[2]
	xshop_path = os.path.dirname(os.path.realpath(test.__file__))
	dockerfilepath=xshop_path+'/defaults/contexts/%s/'%(image,)
	call(['docker','build','-t',image,dockerfilepath])

elif sys.argv[1]=='pull':
        pull.pull()
