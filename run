#! /usr/bin/python2.7
from xshop import new
from xshop import test
from xshop import build
from xshop import config
from xshop import version
import sys
from sets import Set
args = sys.argv

#
#	new [library] [name]
#
if args[1]=='new':
	if len(args)<4:
		print ("Insufficient arguments.")
	elif len(args)>4:
		print ("Too many arguments.")
	
	new.new_test_project(args[2],args[3])

#
#	test [source] [version]
#
elif args[1]=='test':
	FORCE = False
	if args[3]=='-f':
		FORCE=True
		version = args[4]
	else:
		FORCE=False
		version = args[3]

	source = args[2]
	if source=='source':
		source='debian'
		c = config.Config()
		bversions = c.get('built-versions')
		if (not version in bversions) or FORCE:
			build.build_version(version)
			bversions.append(version)
			c.put('built-versions',sorted(list(set(bversions))))

	print test.run_test(version,source)

#
#	build			- Builds all versions which have not been successfully built 
# 	build [version] 	- Builds version specified
#	build -f		- Builds all versions
#
elif args[1]=='build':
	# Go ahead and detect versions
	c = config.Config()
	c.put('source-versions',sorted(version.detect_source(c.get('library'),'source')))
	if len(args)==2:
		build.build_multiple(False)
	elif args[2]=='-f':
		build.build_multiple(True)
	else:	
		if build.build_version(args[2]):
			bversions = c.get('built-versions')
			bversions.append(args[2])
			c.put('built-versions',sorted(list(set(bversions))))
		
else:
	print ("Command not recognized: "+args[1])
		
